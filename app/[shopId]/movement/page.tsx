import { DataTable, movementUserColumns } from "@/components/data-table"
import { db } from "@/db/(inv)/instance"

import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { DATE_TABS } from "@/contants/list"
import { useDateTabs } from "@/hooks"
import { getMember } from "@/lib/supabase"
import { movement } from "@/orm/(inv)/schema"
import { getFromHeaders } from "@/utils/general"
import { and, desc, eq, gte, lte } from "drizzle-orm"
import { getTranslations } from "next-intl/server"
import Link from "next/link"

export default async function MovementPage({
  searchParams,
}: {
  searchParams: {
    row?: string
    action?: "movements" | "delete" | "receipt"
    tab?: string
  }
}) {
  const t = await getTranslations()
  const { role } = (await getMember()) || {}

  const { tab } = searchParams
  const { start, end, validTab } = useDateTabs({ tabParam: tab })
  console.log({ start, end, validTab })
  const { shopId, userId } = getFromHeaders()

  const qry = [
    eq(movement.shopId, shopId),
    gte(movement.createdAt, start.toISOString()),
    lte(movement.createdAt, end.toISOString()),
  ]

  if (role !== "ADMIN") qry.push(eq(movement.updatedBy, userId))

  const data = await db.query.movement.findMany({
    where: and(...qry),
    orderBy: desc(movement.createdAt),
    with: { user: true },
  })

  return (
    <>
      <main className="p-4 sm:px-6 sm:py-0 md:gap-8">
        <Tabs defaultValue={validTab}>
          <div className="flex items-center">
            <div className="overflow-x-auto">
              <TabsList>
                {DATE_TABS.map((tab) => (
                  <Link
                    key={tab}
                    href={`/${shopId}/movement?tab=${tab}`}
                    passHref
                  >
                    <TabsTrigger value={tab}>{t(tab)}</TabsTrigger>
                  </Link>
                ))}
              </TabsList>
            </div>
          </div>
        </Tabs>
        <Card x-chunk="dashboard-06-chunk-0">
          <CardHeader>
            <CardTitle>{t("Movements")}</CardTitle>
            <CardDescription>
              {t("Manage every movement generated by transactions")}
            </CardDescription>
          </CardHeader>
          <CardContent>
            {/* @ts-ignore */}
            <DataTable columns={movementUserColumns} data={data} />
          </CardContent>
        </Card>
      </main>
    </>
  )
}
