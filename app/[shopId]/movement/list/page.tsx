import { DataTable, movementUserColumns } from "@/components/data-table"
import { db } from "@/db/(inv)/instance"

import { RangeTab } from "@/components/tab"
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { RANGE_TO_DATE_MAP } from "@/contants/maps"
import { getMember } from "@/lib/supabase"
import { movement } from "@/orm/(inv)/schema"
import { getFromHeaders } from "@/utils/general"
import { and, desc, eq, gte, lte } from "drizzle-orm"
import { getTranslations } from "next-intl/server"

type Params = {
  searchParams: Promise<{
    range?: RangeT
  }>
}

export default async function MovementPage({ searchParams }: Params) {
  const t = await getTranslations()
  const { role } = (await getMember()) || {}

  const { range = "TODAY" } = await searchParams
  const { getStart, getEnd } = RANGE_TO_DATE_MAP[range]
  const start = getStart()
  const end = getEnd()
  const { shopId, userId } = await getFromHeaders()

  const qry = [
    eq(movement.shopId, shopId),
    gte(movement.createdAt, start.toISOString()),
    lte(movement.createdAt, end.toISOString()),
  ]

  if (role !== "ADMIN") qry.push(eq(movement.updatedBy, userId))

  const data = await db.query.movement.findMany({
    where: and(...qry),
    orderBy: desc(movement.createdAt),
    with: { user: true },
  })

  return (
    <>
      <div className="mb-2">
        <RangeTab defaultValue="TODAY" />
      </div>
      <Card x-chunk="dashboard-06-chunk-0">
        <CardHeader>
          <CardTitle>{t("Movements")}</CardTitle>
          <CardDescription>
            {t("Manage every movement generated by transactions")}
          </CardDescription>
        </CardHeader>
        <CardContent>
          {/* @ts-ignore */}
          <DataTable columns={movementUserColumns} data={data} />
        </CardContent>
      </Card>
    </>
  )
}
